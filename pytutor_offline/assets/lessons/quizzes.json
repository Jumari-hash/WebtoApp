[
  {
    "id": 1,
    "title": "Python Basics Quiz",
    "category": "Beginner",
    "questions": [
      {
        "question": "What is the correct file extension for Python files?",
        "options": [".python", ".py", ".pt", ".pyt"],
        "correctAnswer": 1,
        "explanation": ".py is the standard file extension for Python files"
      },
      {
        "question": "Which keyword is used to create a function in Python?",
        "options": ["function", "def", "func", "define"],
        "correctAnswer": 1,
        "explanation": "The 'def' keyword is used to define functions in Python"
      },
      {
        "question": "What will print(10 / 3) output?",
        "options": ["3", "3.0", "3.3333333333333335", "3.33"],
        "correctAnswer": 2,
        "explanation": "Division (/) in Python 3 always returns a float"
      },
      {
        "question": "How do you start a comment in Python?",
        "options": ["//", "/*", "#", "<!--"],
        "correctAnswer": 2,
        "explanation": "Comments in Python start with the # symbol"
      },
      {
        "question": "Which of these is NOT a valid Python data type?",
        "options": ["int", "float", "string", "bool"],
        "correctAnswer": 2,
        "explanation": "The correct type name is 'str', not 'string'"
      }
    ]
  },
  {
    "id": 2,
    "title": "Variables and Data Types Quiz",
    "category": "Beginner",
    "questions": [
      {
        "question": "What is the output of: print(type(5.0))?",
        "options": ["<class 'int'>", "<class 'float'>", "<class 'number'>", "<class 'decimal'>"],
        "correctAnswer": 1,
        "explanation": "5.0 is a float, so type() returns <class 'float'>"
      },
      {
        "question": "Which operator is used for exponentiation in Python?",
        "options": ["^", "**", "exp()", "pow()"],
        "correctAnswer": 1,
        "explanation": "The ** operator is used for exponentiation (e.g., 2**3 = 8)"
      },
      {
        "question": "What will int('100') + 50 output?",
        "options": ["10050", "150", "Error", "100 50"],
        "correctAnswer": 1,
        "explanation": "int('100') converts the string to integer 100, then 100 + 50 = 150"
      },
      {
        "question": "Which is the correct way to create a string?",
        "options": ["'Hello World'", "\"Hello World\"", "'''Hello World'''", "All of the above"],
        "correctAnswer": 3,
        "explanation": "Python accepts single quotes, double quotes, and triple quotes for strings"
      },
      {
        "question": "What is the result of: bool(0)?",
        "options": ["True", "False", "0", "Error"],
        "correctAnswer": 1,
        "explanation": "In Python, 0 is considered False when converted to boolean"
      }
    ]
  },
  {
    "id": 3,
    "title": "Lists and Strings Quiz",
    "category": "Beginner",
    "questions": [
      {
        "question": "What is the output of: ['a', 'b', 'c'][1]?",
        "options": ["a", "b", "c", "Error"],
        "correctAnswer": 1,
        "explanation": "Lists are zero-indexed, so index 1 returns the second element 'b'"
      },
      {
        "question": "How do you add an item to the end of a list?",
        "options": ["list.add(item)", "list.append(item)", "list.push(item)", "list.insert(item)"],
        "correctAnswer": 1,
        "explanation": "The append() method adds an item to the end of a list"
      },
      {
        "question": "What does 'Hello'.upper() return?",
        "options": ["hello", "HELLO", "Hello", "hELLO"],
        "correctAnswer": 1,
        "explanation": "upper() converts all characters in a string to uppercase"
      },
      {
        "question": "What is the output of: len([1, 2, 3, 4, 5])?",
        "options": ["4", "5", "6", "Error"],
        "correctAnswer": 1,
        "explanation": "len() returns the number of items in a list, which is 5"
      },
      {
        "question": "How do you access the last item in a list called 'items'?",
        "options": ["items[last]", "items[-1]", "items[end]", "items.last()"],
        "correctAnswer": 1,
        "explanation": "Negative indexing starts from the end; -1 refers to the last item"
      }
    ]
  },
  {
    "id": 4,
    "title": "Control Flow Quiz",
    "category": "Beginner",
    "questions": [
      {
        "question": "What is the purpose of the 'elif' statement?",
        "options": [
          "To end an if statement",
          "To check another condition if the previous ones were False",
          "To repeat code",
          "To define a function"
        ],
        "correctAnswer": 1,
        "explanation": "elif (else if) checks another condition when previous if/elif conditions are False"
      },
      {
        "question": "What will this code print?\nx = 10\nif x > 5:\n    print('A')\nif x > 15:\n    print('B')",
        "options": ["A", "B", "A B", "Nothing"],
        "correctAnswer": 0,
        "explanation": "Only 'A' prints because x > 5 is True, but x > 15 is False"
      },
      {
        "question": "What does the 'break' statement do?",
        "options": [
          "Pauses the program",
          "Exits the current loop",
          "Skips to the next iteration",
          "Creates a new loop"
        ],
        "correctAnswer": 1,
        "explanation": "break exits (terminates) the current loop immediately"
      },
      {
        "question": "What is the output of: range(3)?",
        "options": ["[1, 2, 3]", "[0, 1, 2]", "[0, 1, 2, 3]", "range(0, 3)"],
        "correctAnswer": 3,
        "explanation": "range(3) creates a range object from 0 to 2 (not a list directly)"
      },
      {
        "question": "What does 'continue' do in a loop?",
        "options": [
          "Exits the loop",
          "Restarts the loop from the beginning",
          "Skips the rest of the current iteration",
          "Does nothing"
        ],
        "correctAnswer": 2,
        "explanation": "continue skips the remaining code in the current iteration and goes to the next one"
      }
    ]
  },
  {
    "id": 5,
    "title": "Functions Quiz",
    "category": "Intermediate",
    "questions": [
      {
        "question": "What keyword is used to return a value from a function?",
        "options": ["return", "give", "output", "send"],
        "correctAnswer": 0,
        "explanation": "The 'return' keyword sends a value back from a function"
      },
      {
        "question": "What is the output of:\ndef add(a, b=5):\n    return a + b\nprint(add(3))",
        "options": ["3", "5", "8", "Error"],
        "correctAnswer": 2,
        "explanation": "b defaults to 5, so add(3) is 3 + 5 = 8"
      },
      {
        "question": "How many values can a function return?",
        "options": ["0", "1", "Multiple (as a tuple)", "All of the above"],
        "correctAnswer": 3,
        "explanation": "Functions can return nothing, one value, or multiple values (as a tuple)"
      },
      {
        "question": "What is a function parameter?",
        "options": [
          "A variable defined inside a function",
          "A value passed to a function when calling it",
          "The return value of a function",
          "A comment in a function"
        ],
        "correctAnswer": 1,
        "explanation": "Parameters are variables that receive values when a function is called"
      },
      {
        "question": "What happens if a function doesn't have a return statement?",
        "options": [
          "Error",
          "Returns None",
          "Returns 0",
          "Cannot be called"
        ],
        "correctAnswer": 1,
        "explanation": "Functions without a return statement implicitly return None"
      }
    ]
  },
  {
    "id": 6,
    "title": "Dictionaries Quiz",
    "category": "Intermediate",
    "questions": [
      {
        "question": "How do you access the value associated with key 'name' in a dictionary?",
        "options": ["dict.name", "dict['name']", "dict(name)", "dict->name"],
        "correctAnswer": 1,
        "explanation": "Use square brackets with the key: dict['name']"
      },
      {
        "question": "What method returns all keys in a dictionary?",
        "options": ["dict.keys()", "dict.getKeys()", "dict.allKeys()", "dict.keyList()"],
        "correctAnswer": 0,
        "explanation": "The keys() method returns all keys in a dictionary"
      },
      {
        "question": "What is the output of: {'a': 1, 'b': 2}.get('c', 0)?",
        "options": ["None", "Error", "0", "c"],
        "correctAnswer": 2,
        "explanation": "get() returns the default value (0) when the key doesn't exist"
      },
      {
        "question": "Can dictionary keys be of different types?",
        "options": ["No", "Yes", "Only strings and numbers", "Only immutable types"],
        "correctAnswer": 3,
        "explanation": "Dictionary keys must be immutable (strings, numbers, tuples)"
      },
      {
        "question": "How do you add a new key-value pair to a dictionary?",
        "options": [
          "dict.add(key, value)",
          "dict[key] = value",
          "dict.insert(key, value)",
          "dict.append(key, value)"
        ],
        "correctAnswer": 1,
        "explanation": "Assign a value to a key using dict[key] = value"
      }
    ]
  }
]
